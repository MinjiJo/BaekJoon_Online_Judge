package _5.dispatcher;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/ch3/_5.dispatcher/DispatcherServlet")
public class DispatcherServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    public DispatcherServlet() {
        super();
    }
    
    /* 페이지 이동 방법
    1. Dispatcher 방식
       - 클라이언트로부터 요청 받은 Servlet 프로그램이 응답을 하지 않고
                    다른 서블릿이나 JSP 페이지 등에 전달합니다.(요청 재지정)
       - 이 방식으로 이동하면 주소 표시줄의 주소가 변경되지 않습니다.
       - request 영역을 공유하게 됩니다.
       - 방법 : RequestDispatcher에서 제공하는 메소드(forward())를 사용하여 요청을 재지정합니다.
    */
    
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html;charset=euc-kr");
		PrintWriter out = response.getWriter();
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}
